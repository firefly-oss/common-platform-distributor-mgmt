openapi: 3.0.1
info:
  title: common-platform-distributor-mgmt
  description: Distributor Management Core Application
  contact:
    name: Firefly Software Solutions Inc
    email: dev@getfirefly.io
  version: 1.0.0
servers:
  - url: http://core.catalis.vc/distributors
    description: Development Environment
  - url: /
    description: Local Development Environment
tags:
  - name: Product
    description: API for managing distributor products
  - name: Distributor
    description: API for managing distributors
  - name: Lending Configuration
    description: API for managing product lending configurations
  - name: Distributor Simulations
    description: API for managing distributor simulation tracking
  - name: Terms and Conditions Templates
    description: API for managing terms and conditions templates
  - name: Product Category
    description: API for managing product categories
  - name: Leasing Contract
    description: API for managing leasing contracts
  - name: Distributor Branding
    description: API for managing distributor branding
  - name: Shipment
    description: API for managing shipments
  - name: Distributor Lending Configuration
    description: API for managing distributor-level lending configurations
  - name: Distributor Operations
    description: API for managing distributor operational coverage
  - name: Distributor Audit Log
    description: API for managing distributor audit logs
  - name: Simulations
    description: API for global simulation access and management
  - name: Distributor Terms and Conditions
    description: API for managing distributor terms and conditions
  - name: Lending Type
    description: API for managing lending types
paths:
  /api/v1/terms-and-conditions-templates/{templateId}:
    get:
      tags:
        - Terms and Conditions Templates
      summary: Get template by ID
      description: Returns a template based on its ID
      operationId: getTemplateById
      parameters:
        - name: templateId
          in: path
          description: ID of the template
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsAndConditionsTemplateDTO'
        '404':
          description: Template not found
        '500':
          description: Internal server error
    put:
      tags:
        - Terms and Conditions Templates
      summary: Update template
      description: Updates an existing template
      operationId: updateTemplate
      parameters:
        - name: templateId
          in: path
          description: ID of the template to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TermsAndConditionsTemplateDTO'
        required: true
      responses:
        '200':
          description: Template successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsAndConditionsTemplateDTO'
        '400':
          description: Invalid template data provided
        '404':
          description: Template not found
        '409':
          description: Template name already exists
        '500':
          description: Internal server error
    delete:
      tags:
        - Terms and Conditions Templates
      summary: Delete template
      description: Deletes a template
      operationId: deleteTemplate
      parameters:
        - name: templateId
          in: path
          description: ID of the template to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Template successfully deleted
        '404':
          description: Template not found
        '500':
          description: Internal server error
  /api/v1/shipments/{id}/status:
    put:
      tags:
        - Shipment
      summary: Update shipment status
      description: Updates the status of an existing shipment
      operationId: updateShipmentStatus
      parameters:
        - name: id
          in: path
          description: ID of the shipment to update
          required: true
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          description: New status value
          required: true
          schema:
            type: string
        - name: updatedBy
          in: query
          description: ID of the user updating the status
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Shipment status successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentDTO'
        '400':
          description: Invalid status value
        '404':
          description: Shipment not found
        '500':
          description: Internal server error
  /api/v1/shipments/{id}:
    get:
      tags:
        - Shipment
      summary: Get shipment by ID
      description: Returns a shipment based on its ID
      operationId: getShipmentById
      parameters:
        - name: id
          in: path
          description: ID of the shipment to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved shipment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentDTO'
        '404':
          description: Shipment not found
        '500':
          description: Internal server error
    put:
      tags:
        - Shipment
      summary: Update an existing shipment
      description: Updates an existing shipment with the provided information
      operationId: updateShipment
      parameters:
        - name: id
          in: path
          description: ID of the shipment to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentDTO'
        required: true
      responses:
        '200':
          description: Shipment successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentDTO'
        '400':
          description: Invalid shipment data provided
        '404':
          description: Shipment not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Shipment
      summary: Delete a shipment
      description: Deletes a shipment based on its ID
      operationId: deleteShipment
      parameters:
        - name: id
          in: path
          description: ID of the shipment to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Shipment successfully deleted
        '404':
          description: Shipment not found
        '500':
          description: Internal server error
  /api/v1/product-categories/{id}:
    get:
      tags:
        - Product Category
      summary: Get product category by ID
      description: Returns a product category based on its ID
      operationId: getProductCategoryById
      parameters:
        - name: id
          in: path
          description: ID of the product category to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved product category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryDTO'
        '404':
          description: Product category not found
        '500':
          description: Internal server error
    put:
      tags:
        - Product Category
      summary: Update product category
      description: Updates an existing product category with the provided information
      operationId: updateProductCategory
      parameters:
        - name: id
          in: path
          description: ID of the product category to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryDTO'
        required: true
      responses:
        '200':
          description: Product category successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryDTO'
        '400':
          description: Invalid product category data provided
        '404':
          description: Product category not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Product Category
      summary: Delete product category
      description: Deletes a product category based on its ID
      operationId: deleteProductCategory
      parameters:
        - name: id
          in: path
          description: ID of the product category to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Product category successfully deleted
        '404':
          description: Product category not found
        '500':
          description: Internal server error
  /api/v1/lending-types/{id}:
    get:
      tags:
        - Lending Type
      summary: Get lending type by ID
      description: Returns a lending type based on its ID
      operationId: getLendingTypeById
      parameters:
        - name: id
          in: path
          description: ID of the lending type to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved lending type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingTypeDTO'
        '404':
          description: Lending type not found
        '500':
          description: Internal server error
    put:
      tags:
        - Lending Type
      summary: Update lending type
      description: Updates an existing lending type with the provided information
      operationId: updateLendingType
      parameters:
        - name: id
          in: path
          description: ID of the lending type to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LendingTypeDTO'
        required: true
      responses:
        '200':
          description: Lending type successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingTypeDTO'
        '400':
          description: Invalid lending type data provided
        '404':
          description: Lending type not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Lending Type
      summary: Delete lending type
      description: Deletes a lending type based on its ID
      operationId: deleteLendingType
      parameters:
        - name: id
          in: path
          description: ID of the lending type to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Lending type successfully deleted
        '404':
          description: Lending type not found
        '500':
          description: Internal server error
  /api/v1/leasing-contracts/{id}:
    get:
      tags:
        - Leasing Contract
      summary: Get leasing contract by ID
      description: Returns a leasing contract based on its ID
      operationId: getLeasingContractById
      parameters:
        - name: id
          in: path
          description: ID of the leasing contract to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved leasing contract
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingContractDTO'
        '404':
          description: Leasing contract not found
        '500':
          description: Internal server error
    put:
      tags:
        - Leasing Contract
      summary: Update an existing leasing contract
      description: Updates an existing leasing contract with the provided information
      operationId: updateLeasingContract
      parameters:
        - name: id
          in: path
          description: ID of the leasing contract to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeasingContractDTO'
        required: true
      responses:
        '200':
          description: Leasing contract successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingContractDTO'
        '400':
          description: Invalid leasing contract data provided
        '404':
          description: Leasing contract not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Leasing Contract
      summary: Delete a leasing contract
      description: Deletes a leasing contract based on its ID
      operationId: deleteLeasingContract
      parameters:
        - name: id
          in: path
          description: ID of the leasing contract to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Leasing contract successfully deleted
        '404':
          description: Leasing contract not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/terms-and-conditions/{termsId}:
    get:
      tags:
        - Distributor Terms and Conditions
      summary: Get distributor terms and conditions by ID
      description: Returns distributor terms and conditions based on its ID
      operationId: getDistributorTermsAndConditionsById
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: termsId
          in: path
          description: ID of the terms and conditions
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved terms and conditions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorTermsAndConditionsDTO'
        '404':
          description: Terms and conditions not found
        '500':
          description: Internal server error
    put:
      tags:
        - Distributor Terms and Conditions
      summary: Update distributor terms and conditions
      description: Updates existing distributor terms and conditions
      operationId: updateDistributorTermsAndConditions
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: termsId
          in: path
          description: ID of the terms and conditions to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributorTermsAndConditionsDTO'
        required: true
      responses:
        '200':
          description: Terms and conditions successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorTermsAndConditionsDTO'
        '400':
          description: Invalid terms and conditions data provided
        '404':
          description: Terms and conditions not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Distributor Terms and Conditions
      summary: Delete distributor terms and conditions
      description: Deletes distributor terms and conditions
      operationId: deleteDistributorTermsAndConditions
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: termsId
          in: path
          description: ID of the terms and conditions to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Terms and conditions successfully deleted
        '404':
          description: Terms and conditions not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/simulations/{simulationId}:
    get:
      tags:
        - Distributor Simulations
      summary: Get distributor simulation by ID
      description: Returns a distributor simulation based on its ID
      operationId: getDistributorSimulationById
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: simulationId
          in: path
          description: ID of the distributor simulation
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved distributor simulation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorSimulationDTO'
        '404':
          description: Distributor simulation not found
        '500':
          description: Internal server error
    put:
      tags:
        - Distributor Simulations
      summary: Update distributor simulation
      description: Updates an existing distributor simulation
      operationId: updateDistributorSimulation
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: simulationId
          in: path
          description: ID of the distributor simulation to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributorSimulationDTO'
        required: true
      responses:
        '200':
          description: Distributor simulation successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorSimulationDTO'
        '400':
          description: Invalid distributor simulation data provided
        '404':
          description: Distributor simulation not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Distributor Simulations
      summary: Delete distributor simulation
      description: Deletes a distributor simulation
      operationId: deleteDistributorSimulation
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: simulationId
          in: path
          description: ID of the distributor simulation to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Distributor simulation successfully deleted
        '404':
          description: Distributor simulation not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/products/{productId}/lending-configurations/{configId}:
    get:
      tags:
        - Lending Configuration
      summary: Get lending configuration by ID
      description: Returns a lending configuration based on its ID
      operationId: getLendingConfigurationById
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: productId
          in: path
          description: ID of the product
          required: true
          schema:
            type: string
            format: uuid
        - name: configId
          in: path
          description: ID of the lending configuration to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved lending configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingConfigurationDTO'
        '404':
          description: Lending configuration not found
        '500':
          description: Internal server error
    put:
      tags:
        - Lending Configuration
      summary: Update an existing lending configuration
      description: Updates an existing lending configuration for a specific product
      operationId: updateLendingConfiguration
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: productId
          in: path
          description: ID of the product
          required: true
          schema:
            type: string
            format: uuid
        - name: configId
          in: path
          description: ID of the lending configuration to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LendingConfigurationDTO'
        required: true
      responses:
        '200':
          description: Lending configuration successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingConfigurationDTO'
        '400':
          description: Invalid lending configuration data provided
        '404':
          description: Lending configuration not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Lending Configuration
      summary: Delete a lending configuration
      description: Deletes a lending configuration based on its ID
      operationId: deleteLendingConfiguration
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: productId
          in: path
          description: ID of the product
          required: true
          schema:
            type: string
            format: uuid
        - name: configId
          in: path
          description: ID of the lending configuration to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Lending configuration successfully deleted
        '404':
          description: Lending configuration not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/products/{productId}:
    get:
      tags:
        - Product
      summary: Get product by ID
      description: Returns a product based on its ID
      operationId: getProductById
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: productId
          in: path
          description: ID of the product to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
        '404':
          description: Product not found
        '500':
          description: Internal server error
    put:
      tags:
        - Product
      summary: Update an existing product
      description: Updates an existing product for a specific distributor
      operationId: updateProduct
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: productId
          in: path
          description: ID of the product to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDTO'
        required: true
      responses:
        '200':
          description: Product successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
        '400':
          description: Invalid product data provided
        '404':
          description: Product not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Product
      summary: Delete a product
      description: Deletes a product based on its ID
      operationId: deleteProduct
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: productId
          in: path
          description: ID of the product to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Product successfully deleted
        '404':
          description: Product not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/operations/{operationId}:
    get:
      tags:
        - Distributor Operations
      summary: Get distributor operation by ID
      description: Returns a distributor operation based on its ID
      operationId: getDistributorOperationById
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: operationId
          in: path
          description: ID of the distributor operation
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved distributor operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorOperationDTO'
        '404':
          description: Distributor operation not found
        '500':
          description: Internal server error
    put:
      tags:
        - Distributor Operations
      summary: Update distributor operation
      description: Updates an existing distributor operation
      operationId: updateDistributorOperation
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: operationId
          in: path
          description: ID of the distributor operation to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributorOperationDTO'
        required: true
      responses:
        '200':
          description: Distributor operation successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorOperationDTO'
        '400':
          description: Invalid distributor operation data provided
        '404':
          description: Distributor operation not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Distributor Operations
      summary: Delete distributor operation
      description: Deletes a distributor operation
      operationId: deleteDistributorOperation
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: operationId
          in: path
          description: ID of the distributor operation to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Distributor operation successfully deleted
        '404':
          description: Distributor operation not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/brandings/{brandingId}:
    get:
      tags:
        - Distributor Branding
      summary: Get distributor branding by ID
      description: Returns a distributor branding based on its ID
      operationId: getDistributorBrandingById
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: brandingId
          in: path
          description: ID of the distributor branding to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved distributor branding
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorBrandingDTO'
        '404':
          description: Distributor branding not found
        '500':
          description: Internal server error
    put:
      tags:
        - Distributor Branding
      summary: Update distributor branding
      description: Updates an existing distributor branding with the provided information
      operationId: updateDistributorBranding
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: brandingId
          in: path
          description: ID of the distributor branding to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributorBrandingDTO'
        required: true
      responses:
        '200':
          description: Distributor branding successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorBrandingDTO'
        '400':
          description: Invalid distributor branding data provided
        '404':
          description: Distributor branding not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Distributor Branding
      summary: Delete distributor branding
      description: Deletes a distributor branding based on its ID
      operationId: deleteDistributorBranding
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: brandingId
          in: path
          description: ID of the distributor branding to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Distributor branding successfully deleted
        '404':
          description: Distributor branding not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/audit-logs/{auditLogId}:
    get:
      tags:
        - Distributor Audit Log
      summary: Get distributor audit log by ID
      description: Returns a distributor audit log based on its ID
      operationId: getDistributorAuditLogById
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: auditLogId
          in: path
          description: ID of the distributor audit log to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved distributor audit log
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorAuditLogDTO'
        '404':
          description: Distributor audit log not found
        '500':
          description: Internal server error
    put:
      tags:
        - Distributor Audit Log
      summary: Update distributor audit log
      description: Updates an existing distributor audit log with the provided information
      operationId: updateDistributorAuditLog
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: auditLogId
          in: path
          description: ID of the distributor audit log to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributorAuditLogDTO'
        required: true
      responses:
        '200':
          description: Distributor audit log successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorAuditLogDTO'
        '400':
          description: Invalid distributor audit log data provided
        '404':
          description: Distributor audit log not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Distributor Audit Log
      summary: Delete distributor audit log
      description: Deletes a distributor audit log based on its ID
      operationId: deleteDistributorAuditLog
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: auditLogId
          in: path
          description: ID of the distributor audit log to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Distributor audit log successfully deleted
        '404':
          description: Distributor audit log not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}:
    get:
      tags:
        - Distributor
      summary: Get distributor by ID
      description: Returns a distributor based on its ID
      operationId: getDistributorById
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved distributor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorDTO'
        '404':
          description: Distributor not found
        '500':
          description: Internal server error
    put:
      tags:
        - Distributor
      summary: Update distributor
      description: Updates an existing distributor with the provided information
      operationId: updateDistributor
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor to update
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributorDTO'
        required: true
      responses:
        '200':
          description: Distributor successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorDTO'
        '400':
          description: Invalid distributor data provided
        '404':
          description: Distributor not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Distributor
      summary: Delete distributor
      description: Deletes a distributor based on its ID
      operationId: deleteDistributor
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Distributor successfully deleted
        '404':
          description: Distributor not found
        '500':
          description: Internal server error
  /api/v1/terms-and-conditions-templates/{templateId}/preview:
    post:
      tags:
        - Terms and Conditions Templates
      summary: Preview template generation
      description: Previews the generated content from a template with provided variables
      operationId: previewGeneration
      parameters:
        - name: templateId
          in: path
          description: ID of the template
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: Successfully generated preview
          content:
            text/plain: {}
        '400':
          description: Invalid template or variables provided
        '404':
          description: Template not found
        '500':
          description: Internal server error
  /api/v1/terms-and-conditions-templates/filter:
    post:
      tags:
        - Terms and Conditions Templates
      summary: Filter terms and conditions templates
      description: Returns a paginated list of templates based on filter criteria
      operationId: filterTemplates
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestTermsAndConditionsTemplateDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved templates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria provided
        '500':
          description: Internal server error
  /api/v1/terms-and-conditions-templates:
    post:
      tags:
        - Terms and Conditions Templates
      summary: Create a new template
      description: Creates a new terms and conditions template
      operationId: createTemplate
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TermsAndConditionsTemplateDTO'
        required: true
      responses:
        '201':
          description: Template successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsAndConditionsTemplateDTO'
        '400':
          description: Invalid template data provided
        '409':
          description: Template name already exists
        '500':
          description: Internal server error
  /api/v1/shipments/filter:
    post:
      tags:
        - Shipment
      summary: Filter shipments
      description: Returns a paginated list of shipments based on filter criteria
      operationId: filterShipments
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestShipmentDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved shipments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria provided
        '500':
          description: Internal server error
  /api/v1/shipments:
    post:
      tags:
        - Shipment
      summary: Create a new shipment
      description: Creates a new shipment with the provided information
      operationId: createShipment
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentDTO'
        required: true
      responses:
        '201':
          description: Shipment successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentDTO'
        '400':
          description: Invalid shipment data provided
        '500':
          description: Internal server error
  /api/v1/product-categories:
    get:
      tags:
        - Product Category
      summary: Get all product categories
      description: Returns all product categories
      operationId: getAllProductCategories
      responses:
        '200':
          description: Successfully retrieved product categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryDTO'
        '500':
          description: Internal server error
    post:
      tags:
        - Product Category
      summary: Create a new product category
      description: Creates a new product category with the provided information
      operationId: createProductCategory
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryDTO'
        required: true
      responses:
        '201':
          description: Product category successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryDTO'
        '400':
          description: Invalid product category data provided
        '500':
          description: Internal server error
  /api/v1/lending-types:
    get:
      tags:
        - Lending Type
      summary: Get all lending types
      description: Returns all lending types
      operationId: getAllLendingTypes
      responses:
        '200':
          description: Successfully retrieved lending types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingTypeDTO'
        '500':
          description: Internal server error
    post:
      tags:
        - Lending Type
      summary: Create a new lending type
      description: Creates a new lending type with the provided information
      operationId: createLendingType
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LendingTypeDTO'
        required: true
      responses:
        '201':
          description: Lending type successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingTypeDTO'
        '400':
          description: Invalid lending type data provided
        '500':
          description: Internal server error
  /api/v1/leasing-contracts/{id}/approve:
    post:
      tags:
        - Leasing Contract
      summary: Approve a leasing contract
      description: Approves a leasing contract and updates its status
      operationId: approveLeasingContract
      parameters:
        - name: id
          in: path
          description: ID of the leasing contract to approve
          required: true
          schema:
            type: string
            format: uuid
        - name: approvedBy
          in: query
          description: ID of the user approving the contract
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Leasing contract successfully approved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingContractDTO'
        '400':
          description: Invalid approval request
        '404':
          description: Leasing contract not found
        '500':
          description: Internal server error
  /api/v1/leasing-contracts/filter:
    post:
      tags:
        - Leasing Contract
      summary: Filter leasing contracts
      description: Returns a paginated list of leasing contracts based on filter criteria
      operationId: filterLeasingContracts
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestLeasingContractDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved leasing contracts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria provided
        '500':
          description: Internal server error
  /api/v1/leasing-contracts:
    post:
      tags:
        - Leasing Contract
      summary: Create a new leasing contract
      description: Creates a new leasing contract with the provided information
      operationId: createLeasingContract
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeasingContractDTO'
        required: true
      responses:
        '201':
          description: Leasing contract successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingContractDTO'
        '400':
          description: Invalid leasing contract data provided
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/terms-and-conditions/generate/{templateId}:
    post:
      tags:
        - Distributor Terms and Conditions
      summary: Generate terms and conditions from template
      description: Generates new terms and conditions from a template with provided variables
      operationId: generateFromTemplate
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: templateId
          in: path
          description: ID of the template
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '201':
          description: Terms and conditions successfully generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorTermsAndConditionsDTO'
        '400':
          description: Invalid template or variables provided
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/terms-and-conditions/filter:
    post:
      tags:
        - Distributor Terms and Conditions
      summary: Filter distributor terms and conditions
      description: Returns a paginated list of distributor terms and conditions based on filter criteria
      operationId: filterDistributorTermsAndConditions
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestDistributorTermsAndConditionsDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved distributor terms and conditions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria provided
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/terms-and-conditions:
    get:
      tags:
        - Distributor Terms and Conditions
      summary: Get all terms and conditions for distributor
      description: Returns all terms and conditions for a distributor
      operationId: getTermsAndConditionsByDistributorId
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved terms and conditions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorTermsAndConditionsDTO'
        '500':
          description: Internal server error
    post:
      tags:
        - Distributor Terms and Conditions
      summary: Create new distributor terms and conditions
      description: Creates new terms and conditions for a distributor
      operationId: createDistributorTermsAndConditions
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributorTermsAndConditionsDTO'
        required: true
      responses:
        '201':
          description: Terms and conditions successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorTermsAndConditionsDTO'
        '400':
          description: Invalid terms and conditions data provided
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/simulations/filter:
    post:
      tags:
        - Distributor Simulations
      summary: Filter distributor simulations
      description: Returns a paginated list of distributor simulations based on filter criteria
      operationId: filterDistributorSimulations
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestDistributorSimulationDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved distributor simulations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria provided
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/simulations:
    get:
      tags:
        - Distributor Simulations
      summary: Get all simulations for distributor
      description: Returns all simulations tracked by a distributor
      operationId: getSimulationsByDistributorId
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved distributor simulations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorSimulationDTO'
        '500':
          description: Internal server error
    post:
      tags:
        - Distributor Simulations
      summary: Create a new distributor simulation
      description: Creates a new simulation tracking for a distributor
      operationId: createDistributorSimulation
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributorSimulationDTO'
        required: true
      responses:
        '201':
          description: Distributor simulation successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorSimulationDTO'
        '400':
          description: Invalid distributor simulation data provided
        '409':
          description: Distributor simulation already exists for this application
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/products/{productId}/lending-configurations/{configId}/create-contract:
    post:
      tags:
        - Lending Configuration
      summary: Create a leasing contract from a lending configuration
      description: Creates a new leasing contract based on a specific lending configuration
      operationId: createLeasingContractFromConfiguration
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: productId
          in: path
          description: ID of the product
          required: true
          schema:
            type: string
            format: uuid
        - name: configId
          in: path
          description: ID of the lending configuration
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeasingContractDTO'
        required: true
      responses:
        '201':
          description: Leasing contract successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingContractDTO'
        '400':
          description: Invalid leasing contract data provided
        '404':
          description: Lending configuration not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/products/{productId}/lending-configurations/filter:
    post:
      tags:
        - Lending Configuration
      summary: Filter lending configurations
      description: Returns a paginated list of lending configurations based on filter criteria for a specific product
      operationId: filterLendingConfigurations
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: productId
          in: path
          description: ID of the product
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestLendingConfigurationDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved lending configurations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria provided
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/products/{productId}/lending-configurations:
    get:
      tags:
        - Lending Configuration
      summary: Get all lending configurations for a product
      description: Returns all lending configurations associated with a specific product
      operationId: getLendingConfigurationsByProductId
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: productId
          in: path
          description: ID of the product
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved lending configurations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingConfigurationDTO'
        '404':
          description: Product not found
        '500':
          description: Internal server error
    post:
      tags:
        - Lending Configuration
      summary: Create a new lending configuration
      description: Creates a new lending configuration for a specific product
      operationId: createLendingConfiguration
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: productId
          in: path
          description: ID of the product
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LendingConfigurationDTO'
        required: true
      responses:
        '201':
          description: Lending configuration successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingConfigurationDTO'
        '400':
          description: Invalid lending configuration data provided
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/products/filter:
    post:
      tags:
        - Product
      summary: Filter products
      description: Returns a paginated list of products based on filter criteria for a specific distributor
      operationId: filterProducts
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestProductDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria provided
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/products:
    get:
      tags:
        - Product
      summary: Get all products for a distributor
      description: Returns all products associated with a specific distributor
      operationId: getProductsByDistributorId
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
        '404':
          description: Distributor not found
        '500':
          description: Internal server error
    post:
      tags:
        - Product
      summary: Create a new product
      description: Creates a new product for a specific distributor
      operationId: createProduct
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDTO'
        required: true
      responses:
        '201':
          description: Product successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
        '400':
          description: Invalid product data provided
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/operations/filter:
    post:
      tags:
        - Distributor Operations
      summary: Filter distributor operations
      description: Returns a paginated list of distributor operations based on filter criteria
      operationId: filterDistributorOperations
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestDistributorOperationDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved distributor operations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria provided
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/operations:
    get:
      tags:
        - Distributor Operations
      summary: Get all operations for distributor
      description: Returns all operational coverage areas for a distributor
      operationId: getOperationsByDistributorId
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved distributor operations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorOperationDTO'
        '500':
          description: Internal server error
    post:
      tags:
        - Distributor Operations
      summary: Create a new distributor operation
      description: Creates a new operational coverage for a distributor
      operationId: createDistributorOperation
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributorOperationDTO'
        required: true
      responses:
        '201':
          description: Distributor operation successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorOperationDTO'
        '400':
          description: Invalid distributor operation data provided
        '409':
          description: Distributor operation already exists for this location
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/brandings/filter:
    post:
      tags:
        - Distributor Branding
      summary: Filter distributor brandings
      description: Returns a paginated list of distributor brandings based on filter criteria
      operationId: filterDistributorBrandings
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestDistributorBrandingDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved distributor brandings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria provided
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/brandings:
    post:
      tags:
        - Distributor Branding
      summary: Create a new distributor branding
      description: Creates a new distributor branding with the provided information
      operationId: createDistributorBranding
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributorBrandingDTO'
        required: true
      responses:
        '201':
          description: Distributor branding successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorBrandingDTO'
        '400':
          description: Invalid distributor branding data provided
        '404':
          description: Distributor not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/audit-logs/filter:
    post:
      tags:
        - Distributor Audit Log
      summary: Filter distributor audit logs
      description: Returns a paginated list of distributor audit logs based on filter criteria
      operationId: filterDistributorAuditLogs
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestDistributorAuditLogDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved distributor audit logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria provided
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/audit-logs:
    post:
      tags:
        - Distributor Audit Log
      summary: Create a new distributor audit log
      description: Creates a new distributor audit log with the provided information
      operationId: createDistributorAuditLog
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributorAuditLogDTO'
        required: true
      responses:
        '201':
          description: Distributor audit log successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorAuditLogDTO'
        '400':
          description: Invalid distributor audit log data provided
        '404':
          description: Distributor not found
        '500':
          description: Internal server error
  /api/v1/distributors/filter:
    post:
      tags:
        - Distributor
      summary: Filter distributors
      description: Returns a paginated list of distributors based on filter criteria
      operationId: filterDistributors
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterRequestDistributorDTO'
        required: true
      responses:
        '200':
          description: Successfully retrieved distributors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Invalid filter criteria provided
        '500':
          description: Internal server error
  /api/v1/distributors:
    post:
      tags:
        - Distributor
      summary: Create a new distributor
      description: Creates a new distributor with the provided information
      operationId: createDistributor
      parameters:
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributorDTO'
        required: true
      responses:
        '201':
          description: Distributor successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorDTO'
        '400':
          description: Invalid distributor data provided
        '500':
          description: Internal server error
  /api/v1/terms-and-conditions-templates/{templateId}/set-default:
    patch:
      tags:
        - Terms and Conditions Templates
      summary: Set template as default
      description: Sets a template as default for its category
      operationId: setAsDefault
      parameters:
        - name: templateId
          in: path
          description: ID of the template to set as default
          required: true
          schema:
            type: string
            format: uuid
        - name: updatedBy
          in: query
          description: ID of the user performing the update
          required: false
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Template successfully set as default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsAndConditionsTemplateDTO'
        '404':
          description: Template not found
        '500':
          description: Internal server error
  /api/v1/terms-and-conditions-templates/{templateId}/remove-default:
    patch:
      tags:
        - Terms and Conditions Templates
      summary: Remove default status
      description: Removes default status from a template
      operationId: removeDefault
      parameters:
        - name: templateId
          in: path
          description: ID of the template to remove default status from
          required: true
          schema:
            type: string
            format: uuid
        - name: updatedBy
          in: query
          description: ID of the user performing the update
          required: false
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Default status successfully removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsAndConditionsTemplateDTO'
        '404':
          description: Template not found
        '500':
          description: Internal server error
  /api/v1/terms-and-conditions-templates/{templateId}/deactivate:
    patch:
      tags:
        - Terms and Conditions Templates
      summary: Deactivate template
      description: Deactivates a template
      operationId: deactivateTemplate
      parameters:
        - name: templateId
          in: path
          description: ID of the template to deactivate
          required: true
          schema:
            type: string
            format: uuid
        - name: updatedBy
          in: query
          description: ID of the user performing the update
          required: false
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Template successfully deactivated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsAndConditionsTemplateDTO'
        '404':
          description: Template not found
        '500':
          description: Internal server error
  /api/v1/terms-and-conditions-templates/{templateId}/activate:
    patch:
      tags:
        - Terms and Conditions Templates
      summary: Activate template
      description: Activates a template
      operationId: activateTemplate
      parameters:
        - name: templateId
          in: path
          description: ID of the template to activate
          required: true
          schema:
            type: string
            format: uuid
        - name: updatedBy
          in: query
          description: ID of the user performing the update
          required: false
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Template successfully activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsAndConditionsTemplateDTO'
        '404':
          description: Template not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/terms-and-conditions/{termsId}/status:
    patch:
      tags:
        - Distributor Terms and Conditions
      summary: Update terms and conditions status
      description: Updates the status of distributor terms and conditions
      operationId: updateStatus
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: termsId
          in: path
          description: ID of the terms and conditions
          required: true
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          description: New status
          required: true
          schema:
            type: string
        - name: updatedBy
          in: query
          description: ID of the user performing the update
          required: false
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Status successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorTermsAndConditionsDTO'
        '404':
          description: Terms and conditions not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/terms-and-conditions/{termsId}/sign:
    patch:
      tags:
        - Distributor Terms and Conditions
      summary: Sign terms and conditions
      description: Signs the distributor terms and conditions
      operationId: signTermsAndConditions
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: termsId
          in: path
          description: ID of the terms and conditions to sign
          required: true
          schema:
            type: string
            format: uuid
        - name: signedBy
          in: query
          description: ID of the user signing
          required: true
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Terms and conditions successfully signed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorTermsAndConditionsDTO'
        '404':
          description: Terms and conditions not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/terms-and-conditions/{termsId}/deactivate:
    patch:
      tags:
        - Distributor Terms and Conditions
      summary: Deactivate terms and conditions
      description: Deactivates distributor terms and conditions
      operationId: deactivateTermsAndConditions
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: termsId
          in: path
          description: ID of the terms and conditions to deactivate
          required: true
          schema:
            type: string
            format: uuid
        - name: updatedBy
          in: query
          description: ID of the user performing the update
          required: false
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Terms and conditions successfully deactivated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorTermsAndConditionsDTO'
        '404':
          description: Terms and conditions not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/terms-and-conditions/{termsId}/activate:
    patch:
      tags:
        - Distributor Terms and Conditions
      summary: Activate terms and conditions
      description: Activates distributor terms and conditions
      operationId: activateTermsAndConditions
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: termsId
          in: path
          description: ID of the terms and conditions to activate
          required: true
          schema:
            type: string
            format: uuid
        - name: updatedBy
          in: query
          description: ID of the user performing the update
          required: false
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Terms and conditions successfully activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorTermsAndConditionsDTO'
        '404':
          description: Terms and conditions not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/simulations/{simulationId}/status:
    patch:
      tags:
        - Distributor Simulations
      summary: Update simulation status
      description: Updates the status of a distributor simulation
      operationId: updateSimulationStatus
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: simulationId
          in: path
          description: ID of the distributor simulation
          required: true
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          description: New status for the simulation
          required: true
          schema:
            type: string
        - name: updatedBy
          in: query
          description: ID of the user performing the update
          required: false
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Simulation status successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorSimulationDTO'
        '404':
          description: Distributor simulation not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/simulations/{simulationId}/deactivate:
    patch:
      tags:
        - Distributor Simulations
      summary: Deactivate distributor simulation
      description: Deactivates a distributor simulation
      operationId: deactivateDistributorSimulation
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: simulationId
          in: path
          description: ID of the distributor simulation to deactivate
          required: true
          schema:
            type: string
            format: uuid
        - name: updatedBy
          in: query
          description: ID of the user performing the update
          required: false
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Distributor simulation successfully deactivated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorSimulationDTO'
        '404':
          description: Distributor simulation not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/simulations/{simulationId}/activate:
    patch:
      tags:
        - Distributor Simulations
      summary: Activate distributor simulation
      description: Activates a distributor simulation
      operationId: activateDistributorSimulation
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: simulationId
          in: path
          description: ID of the distributor simulation to activate
          required: true
          schema:
            type: string
            format: uuid
        - name: updatedBy
          in: query
          description: ID of the user performing the update
          required: false
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Distributor simulation successfully activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorSimulationDTO'
        '404':
          description: Distributor simulation not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/operations/{operationId}/deactivate:
    patch:
      tags:
        - Distributor Operations
      summary: Deactivate distributor operation
      description: Deactivates a distributor operation
      operationId: deactivateDistributorOperation
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: operationId
          in: path
          description: ID of the distributor operation to deactivate
          required: true
          schema:
            type: string
            format: uuid
        - name: updatedBy
          in: query
          description: ID of the user performing the update
          required: false
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Distributor operation successfully deactivated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorOperationDTO'
        '404':
          description: Distributor operation not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/operations/{operationId}/activate:
    patch:
      tags:
        - Distributor Operations
      summary: Activate distributor operation
      description: Activates a distributor operation
      operationId: activateDistributorOperation
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: operationId
          in: path
          description: ID of the distributor operation to activate
          required: true
          schema:
            type: string
            format: uuid
        - name: updatedBy
          in: query
          description: ID of the user performing the update
          required: false
          schema:
            type: string
            format: uuid
        - name: X-Idempotency-Key
          in: header
          description: Unique key for idempotent requests. If provided, ensures that identical requests with the same key will only be processed once.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Distributor operation successfully activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorOperationDTO'
        '404':
          description: Distributor operation not found
        '500':
          description: Internal server error
  /api/v1/terms-and-conditions-templates/name/{name}:
    get:
      tags:
        - Terms and Conditions Templates
      summary: Get template by name
      description: Returns a template based on its name
      operationId: getTemplateByName
      parameters:
        - name: name
          in: path
          description: Name of the template
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsAndConditionsTemplateDTO'
        '404':
          description: Template not found
        '500':
          description: Internal server error
  /api/v1/terms-and-conditions-templates/default/category/{category}:
    get:
      tags:
        - Terms and Conditions Templates
      summary: Get default template by category
      description: Returns the default template for a specific category
      operationId: getDefaultTemplateByCategory
      parameters:
        - name: category
          in: path
          description: Category
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved default template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsAndConditionsTemplateDTO'
        '404':
          description: Default template not found for category
        '500':
          description: Internal server error
  /api/v1/terms-and-conditions-templates/default:
    get:
      tags:
        - Terms and Conditions Templates
      summary: Get default templates
      description: Returns all default templates
      operationId: getDefaultTemplates
      responses:
        '200':
          description: Successfully retrieved default templates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsAndConditionsTemplateDTO'
        '500':
          description: Internal server error
  /api/v1/terms-and-conditions-templates/category/{category}/active:
    get:
      tags:
        - Terms and Conditions Templates
      summary: Get active templates by category
      description: Returns active templates in a specific category
      operationId: getActiveTemplatesByCategory
      parameters:
        - name: category
          in: path
          description: Category of templates
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved active templates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsAndConditionsTemplateDTO'
        '500':
          description: Internal server error
  /api/v1/terms-and-conditions-templates/category/{category}:
    get:
      tags:
        - Terms and Conditions Templates
      summary: Get templates by category
      description: Returns templates in a specific category
      operationId: getTemplatesByCategory
      parameters:
        - name: category
          in: path
          description: Category of templates
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved templates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsAndConditionsTemplateDTO'
        '500':
          description: Internal server error
  /api/v1/terms-and-conditions-templates/active:
    get:
      tags:
        - Terms and Conditions Templates
      summary: Get all active templates
      description: Returns all active templates
      operationId: getActiveTemplates
      responses:
        '200':
          description: Successfully retrieved active templates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsAndConditionsTemplateDTO'
        '500':
          description: Internal server error
  /api/v1/simulations/status/{status}:
    get:
      tags:
        - Simulations
      summary: Get simulations by status
      description: Returns all simulations with a specific status
      operationId: getSimulationsByStatus
      parameters:
        - name: status
          in: path
          description: Status of the simulations
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved simulations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorSimulationDTO'
        '500':
          description: Internal server error
  /api/v1/simulations/country/{countryId}:
    get:
      tags:
        - Simulations
      summary: Get simulations by country
      description: Returns all simulations for distributors operating in a specific country
      operationId: getSimulationsByCountry
      parameters:
        - name: countryId
          in: path
          description: ID of the country
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved simulations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorSimulationDTO'
        '500':
          description: Internal server error
  /api/v1/simulations/application/{applicationId}:
    get:
      tags:
        - Simulations
      summary: Get simulation by application ID
      description: Returns a simulation based on its application ID
      operationId: getSimulationByApplicationId
      parameters:
        - name: applicationId
          in: path
          description: ID of the application
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved simulation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorSimulationDTO'
        '404':
          description: Simulation not found
        '500':
          description: Internal server error
  /api/v1/shipments/tracking/{trackingNumber}:
    get:
      tags:
        - Shipment
      summary: Get shipment by tracking number
      description: Returns a shipment based on its tracking number
      operationId: getShipmentByTrackingNumber
      parameters:
        - name: trackingNumber
          in: path
          description: Tracking number of the shipment to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved shipment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentDTO'
        '404':
          description: Shipment not found
        '500':
          description: Internal server error
  /api/v1/shipments/status/{status}:
    get:
      tags:
        - Shipment
      summary: Get shipments by status
      description: Returns all shipments with a specific status
      operationId: getShipmentsByStatus
      parameters:
        - name: status
          in: path
          description: Status value to filter shipments
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved shipments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentDTO'
        '400':
          description: Invalid status value
        '500':
          description: Internal server error
  /api/v1/shipments/product/{productId}:
    get:
      tags:
        - Shipment
      summary: Get shipments by product
      description: Returns all shipments associated with a specific product
      operationId: getShipmentsByProductId
      parameters:
        - name: productId
          in: path
          description: ID of the product
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved shipments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentDTO'
        '404':
          description: Product not found
        '500':
          description: Internal server error
  /api/v1/shipments/leasing-contract/{leasingContractId}:
    get:
      tags:
        - Shipment
      summary: Get shipments by leasing contract
      description: Returns all shipments associated with a specific leasing contract
      operationId: getShipmentsByLeasingContractId
      parameters:
        - name: leasingContractId
          in: path
          description: ID of the leasing contract
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved shipments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentDTO'
        '404':
          description: Leasing contract not found
        '500':
          description: Internal server error
  /api/v1/product-categories/code/{code}:
    get:
      tags:
        - Product Category
      summary: Get product category by code
      description: Returns a product category based on its code
      operationId: getProductCategoryByCode
      parameters:
        - name: code
          in: path
          description: Code of the product category to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved product category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryDTO'
        '404':
          description: Product category not found
        '500':
          description: Internal server error
  /api/v1/product-categories/active:
    get:
      tags:
        - Product Category
      summary: Get all active product categories
      description: Returns all active product categories
      operationId: getActiveProductCategories
      responses:
        '200':
          description: Successfully retrieved active product categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryDTO'
        '500':
          description: Internal server error
  /api/v1/lending-types/code/{code}:
    get:
      tags:
        - Lending Type
      summary: Get lending type by code
      description: Returns a lending type based on its code
      operationId: getLendingTypeByCode
      parameters:
        - name: code
          in: path
          description: Code of the lending type to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved lending type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingTypeDTO'
        '404':
          description: Lending type not found
        '500':
          description: Internal server error
  /api/v1/lending-types/active:
    get:
      tags:
        - Lending Type
      summary: Get all active lending types
      description: Returns all active lending types
      operationId: getActiveLendingTypes
      responses:
        '200':
          description: Successfully retrieved active lending types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingTypeDTO'
        '500':
          description: Internal server error
  /api/v1/leasing-contracts/status/{status}:
    get:
      tags:
        - Leasing Contract
      summary: Get leasing contracts by status
      description: Returns all leasing contracts with a specific status
      operationId: getLeasingContractsByStatus
      parameters:
        - name: status
          in: path
          description: Status value to filter leasing contracts
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved leasing contracts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingContractDTO'
        '400':
          description: Invalid status value
        '500':
          description: Internal server error
  /api/v1/leasing-contracts/product/{productId}:
    get:
      tags:
        - Leasing Contract
      summary: Get leasing contracts by product
      description: Returns all leasing contracts associated with a specific product
      operationId: getLeasingContractsByProductId
      parameters:
        - name: productId
          in: path
          description: ID of the product
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved leasing contracts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingContractDTO'
        '404':
          description: Product not found
        '500':
          description: Internal server error
  /api/v1/leasing-contracts/party/{partyId}:
    get:
      tags:
        - Leasing Contract
      summary: Get leasing contracts by party
      description: Returns all leasing contracts associated with a specific party
      operationId: getLeasingContractsByPartyId
      parameters:
        - name: partyId
          in: path
          description: ID of the party
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved leasing contracts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingContractDTO'
        '404':
          description: Party not found
        '500':
          description: Internal server error
  /api/v1/leasing-contracts/distributor/{distributorId}:
    get:
      tags:
        - Leasing Contract
      summary: Get leasing contracts by distributor
      description: Returns all leasing contracts associated with a specific distributor
      operationId: getLeasingContractsByDistributorId
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved leasing contracts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingContractDTO'
        '404':
          description: Distributor not found
        '500':
          description: Internal server error
  /api/v1/leasing-contracts/contract/{contractId}:
    get:
      tags:
        - Leasing Contract
      summary: Get leasing contract by contract ID
      description: Returns a leasing contract based on its contract ID
      operationId: getLeasingContractByContractId
      parameters:
        - name: contractId
          in: path
          description: Contract ID of the leasing contract to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved leasing contract
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeasingContractDTO'
        '404':
          description: Leasing contract not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/terms-and-conditions/status/{status}:
    get:
      tags:
        - Distributor Terms and Conditions
      summary: Get terms and conditions by status
      description: Returns terms and conditions with a specific status for a distributor
      operationId: getTermsAndConditionsByDistributorIdAndStatus
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: status
          in: path
          description: Status of the terms and conditions
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved terms and conditions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorTermsAndConditionsDTO'
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/terms-and-conditions/latest:
    get:
      tags:
        - Distributor Terms and Conditions
      summary: Get latest terms and conditions
      description: Returns the latest version of terms and conditions for a distributor
      operationId: getLatestTermsAndConditions
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved latest terms and conditions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorTermsAndConditionsDTO'
        '404':
          description: No terms and conditions found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/terms-and-conditions/has-active-signed:
    get:
      tags:
        - Distributor Terms and Conditions
      summary: Check if distributor has active signed terms
      description: Checks if a distributor has active signed terms and conditions
      operationId: hasActiveSignedTerms
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully checked active signed terms
          content:
            application/json:
              schema:
                type: boolean
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/terms-and-conditions/expiring:
    get:
      tags:
        - Distributor Terms and Conditions
      summary: Get expiring terms and conditions
      description: Returns terms and conditions expiring before a certain date
      operationId: getExpiringTermsAndConditions
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: expirationDate
          in: query
          description: Expiration date threshold
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successfully retrieved expiring terms and conditions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorTermsAndConditionsDTO'
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/terms-and-conditions/active:
    get:
      tags:
        - Distributor Terms and Conditions
      summary: Get active terms and conditions for distributor
      description: Returns all active terms and conditions for a distributor
      operationId: getActiveTermsAndConditionsByDistributorId
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved active terms and conditions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorTermsAndConditionsDTO'
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/simulations/status/{status}:
    get:
      tags:
        - Distributor Simulations
      summary: Get simulations by status
      description: Returns simulations with a specific status for a distributor
      operationId: getSimulationsByDistributorIdAndStatus
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: status
          in: path
          description: Status of the simulations
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved distributor simulations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorSimulationDTO'
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/simulations/active:
    get:
      tags:
        - Distributor Simulations
      summary: Get active simulations for distributor
      description: Returns all active simulations tracked by a distributor
      operationId: getActiveSimulationsByDistributorId
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved active distributor simulations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorSimulationDTO'
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/products/{productId}/lending-configurations/type/{lendingTypeId}:
    get:
      tags:
        - Lending Configuration
      summary: Get lending configurations by product and lending type
      description: Returns all lending configurations for a specific product filtered by lending type
      operationId: getLendingConfigurationsByProductIdAndLendingType
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: productId
          in: path
          description: ID of the product
          required: true
          schema:
            type: string
            format: uuid
        - name: lendingTypeId
          in: path
          description: ID of the lending type
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved lending configurations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingConfigurationDTO'
        '404':
          description: Product or lending type not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/products/{productId}/lending-configurations/default:
    get:
      tags:
        - Lending Configuration
      summary: Get default lending configuration for a product
      description: Returns the default lending configuration for a specific product
      operationId: getDefaultLendingConfigurationByProductId
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: productId
          in: path
          description: ID of the product
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved default lending configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingConfigurationDTO'
        '404':
          description: Product or default configuration not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/products/{productId}/lending-configurations/active:
    get:
      tags:
        - Lending Configuration
      summary: Get all active lending configurations for a product
      description: Returns all active lending configurations associated with a specific product
      operationId: getActiveLendingConfigurationsByProductId
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: productId
          in: path
          description: ID of the product
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved active lending configurations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingConfigurationDTO'
        '404':
          description: Product not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/products/category/{categoryId}:
    get:
      tags:
        - Product
      summary: Get products by category
      description: Returns all products for a specific distributor filtered by category
      operationId: getProductsByDistributorIdAndCategory
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: categoryId
          in: path
          description: ID of the product category
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
        '404':
          description: Distributor or category not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/products/active:
    get:
      tags:
        - Product
      summary: Get all active products for a distributor
      description: Returns all active products associated with a specific distributor
      operationId: getActiveProductsByDistributorId
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved active products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDTO'
        '404':
          description: Distributor not found
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/operations/can-operate:
    get:
      tags:
        - Distributor Operations
      summary: Check if distributor can operate in location
      description: Checks if a distributor can operate in a specific country and administrative division
      operationId: canDistributorOperateInLocation
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
        - name: countryId
          in: query
          description: ID of the country
          required: true
          schema:
            type: string
            format: uuid
        - name: administrativeDivisionId
          in: query
          description: ID of the administrative division
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully checked operation capability
          content:
            application/json:
              schema:
                type: boolean
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/operations/active:
    get:
      tags:
        - Distributor Operations
      summary: Get active operations for distributor
      description: Returns all active operational coverage areas for a distributor
      operationId: getActiveOperationsByDistributorId
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved active distributor operations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributorOperationDTO'
        '500':
          description: Internal server error
  /api/v1/distributors/{distributorId}/lending-configurations:
    get:
      tags:
        - Distributor Lending Configuration
      summary: Get all lending configurations for a distributor
      description: Returns all lending configurations associated with a specific distributor
      operationId: getLendingConfigurationsByDistributorId
      parameters:
        - name: distributorId
          in: path
          description: ID of the distributor
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved lending configurations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LendingConfigurationDTO'
        '404':
          description: Distributor not found
        '500':
          description: Internal server error
components:
  schemas:
    JsonNode:
      type: object
    TermsAndConditionsTemplateDTO:
      required:
        - category
        - name
        - templateContent
        - version
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          maxLength: 255
          minLength: 0
          type: string
        description:
          maxLength: 1000
          minLength: 0
          type: string
        category:
          pattern: GENERAL|LENDING|OPERATIONAL|COMPLIANCE|MARKETING|TECHNICAL
          type: string
        templateContent:
          type: string
        variables:
          $ref: '#/components/schemas/JsonNode'
        version:
          maxLength: 50
          minLength: 0
          type: string
        isDefault:
          type: boolean
        isActive:
          type: boolean
        approvalRequired:
          type: boolean
        autoRenewal:
          type: boolean
        renewalPeriodMonths:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
          format: uuid
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        updatedBy:
          type: string
          format: uuid
          readOnly: true
    LeasingContractDTO:
      required:
        - contractId
        - distributorId
        - downPayment
        - endDate
        - lendingConfigurationId
        - monthlyPayment
        - partyId
        - productId
        - startDate
        - totalAmount
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        contractId:
          type: string
          format: uuid
        partyId:
          type: string
          format: uuid
        distributorId:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        lendingConfigurationId:
          type: string
          format: uuid
        product:
          $ref: '#/components/schemas/ProductDTO'
        lendingConfiguration:
          $ref: '#/components/schemas/LendingConfigurationDTO'
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        monthlyPayment:
          type: number
        downPayment:
          type: number
        totalAmount:
          type: number
        status:
          pattern: DRAFT|PENDING|APPROVED|ACTIVE|COMPLETED|CANCELLED|TERMINATED
          type: string
        approvalDate:
          type: string
          format: date-time
        approvedBy:
          type: string
          format: uuid
        termsConditions:
          maxLength: 5000
          minLength: 0
          type: string
        notes:
          maxLength: 1000
          minLength: 0
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
          format: uuid
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        updatedBy:
          type: string
          format: uuid
          readOnly: true
    LendingConfigurationDTO:
      required:
        - defaultTermMonths
        - lendingType
        - maxTermMonths
        - minTermMonths
        - name
        - productId
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        productId:
          type: string
          format: uuid
        name:
          maxLength: 255
          minLength: 0
          type: string
        description:
          maxLength: 1000
          minLength: 0
          type: string
        lendingType:
          $ref: '#/components/schemas/LendingTypeDTO'
        minTermMonths:
          type: integer
          format: int32
        maxTermMonths:
          type: integer
          format: int32
        defaultTermMonths:
          type: integer
          format: int32
        minDownPaymentPercentage:
          type: number
        defaultDownPaymentPercentage:
          type: number
        interestRate:
          type: number
        processingFeePercentage:
          type: number
        earlyTerminationFeePercentage:
          type: number
        latePaymentFeeAmount:
          type: number
        gracePeriodDays:
          minimum: 0
          type: integer
          format: int32
        isDefault:
          type: boolean
        isActive:
          type: boolean
        termsConditions:
          maxLength: 5000
          minLength: 0
          type: string
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          format: uuid
    LendingTypeDTO:
      required:
        - code
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          maxLength: 255
          minLength: 0
          type: string
        code:
          maxLength: 100
          minLength: 0
          type: string
        description:
          maxLength: 1000
          minLength: 0
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
          format: uuid
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        updatedBy:
          type: string
          format: uuid
          readOnly: true
    ProductCategoryDTO:
      required:
        - code
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          maxLength: 255
          minLength: 0
          type: string
        code:
          maxLength: 100
          minLength: 0
          type: string
        description:
          maxLength: 1000
          minLength: 0
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
          format: uuid
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        updatedBy:
          type: string
          format: uuid
          readOnly: true
    ProductDTO:
      required:
        - distributorId
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        distributorId:
          type: string
          format: uuid
        name:
          maxLength: 255
          minLength: 0
          type: string
        description:
          maxLength: 1000
          minLength: 0
          type: string
        sku:
          maxLength: 100
          minLength: 0
          type: string
        modelNumber:
          maxLength: 100
          minLength: 0
          type: string
        manufacturer:
          maxLength: 255
          minLength: 0
          type: string
        category:
          $ref: '#/components/schemas/ProductCategoryDTO'
        imageUrl:
          maxLength: 255
          minLength: 0
          type: string
        specifications:
          $ref: '#/components/schemas/JsonNode'
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          format: uuid
    ShipmentDTO:
      required:
        - leasingContractId
        - productId
        - shippingAddress
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        leasingContractId:
          type: string
          format: uuid
        leasingContract:
          $ref: '#/components/schemas/LeasingContractDTO'
        productId:
          type: string
          format: uuid
        product:
          $ref: '#/components/schemas/ProductDTO'
        trackingNumber:
          maxLength: 100
          minLength: 0
          type: string
        carrier:
          maxLength: 100
          minLength: 0
          type: string
        shippingAddress:
          maxLength: 500
          minLength: 0
          type: string
        shippingDate:
          type: string
          format: date-time
        estimatedDeliveryDate:
          type: string
          format: date-time
        actualDeliveryDate:
          type: string
          format: date-time
        status:
          pattern: PENDING|SHIPPED|IN_TRANSIT|DELIVERED|CANCELLED|RETURNED
          type: string
        notes:
          maxLength: 1000
          minLength: 0
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
          format: uuid
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        updatedBy:
          type: string
          format: uuid
          readOnly: true
    DistributorDTO:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        externalCode:
          maxLength: 255
          minLength: 0
          type: string
        name:
          maxLength: 255
          minLength: 0
          type: string
        displayName:
          maxLength: 255
          minLength: 0
          type: string
        taxId:
          type: string
        registrationNumber:
          maxLength: 100
          minLength: 0
          type: string
        websiteUrl:
          maxLength: 255
          minLength: 0
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        supportEmail:
          type: string
        addressLine:
          maxLength: 255
          minLength: 0
          type: string
        postalCode:
          maxLength: 20
          minLength: 0
          type: string
        city:
          maxLength: 100
          minLength: 0
          type: string
        state:
          maxLength: 100
          minLength: 0
          type: string
        countryCode:
          pattern: ^[A-Z]{2}$
          type: string
        isActive:
          type: boolean
        isTestDistributor:
          type: boolean
        timeZone:
          maxLength: 50
          minLength: 0
          type: string
        defaultLocale:
          maxLength: 10
          minLength: 0
          type: string
        onboardedAt:
          type: string
          format: date-time
        terminatedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          format: uuid
    DistributorTermsAndConditionsDTO:
      required:
        - content
        - distributorId
        - effectiveDate
        - title
        - version
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        distributorId:
          type: string
          format: uuid
        templateId:
          type: string
          format: uuid
        title:
          maxLength: 255
          minLength: 0
          type: string
        content:
          type: string
        version:
          maxLength: 50
          minLength: 0
          type: string
        effectiveDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        signedDate:
          type: string
          format: date-time
        signedBy:
          type: string
          format: uuid
        status:
          pattern: DRAFT|PENDING_SIGNATURE|SIGNED|EXPIRED|TERMINATED
          type: string
        isActive:
          type: boolean
        notes:
          maxLength: 1000
          minLength: 0
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
          format: uuid
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        updatedBy:
          type: string
          format: uuid
          readOnly: true
        distributor:
          $ref: '#/components/schemas/DistributorDTO'
        template:
          $ref: '#/components/schemas/TermsAndConditionsTemplateDTO'
    DistributorSimulationDTO:
      required:
        - applicationId
        - distributorId
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        distributorId:
          type: string
          format: uuid
        applicationId:
          type: string
          format: uuid
        simulationStatus:
          maxLength: 50
          minLength: 0
          type: string
        notes:
          maxLength: 1000
          minLength: 0
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
          format: uuid
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        updatedBy:
          type: string
          format: uuid
          readOnly: true
    DistributorOperationDTO:
      required:
        - administrativeDivisionId
        - countryId
        - distributorId
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        distributorId:
          type: string
          format: uuid
        countryId:
          type: string
          format: uuid
        administrativeDivisionId:
          type: string
          format: uuid
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
          readOnly: true
        createdBy:
          type: string
          format: uuid
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        updatedBy:
          type: string
          format: uuid
          readOnly: true
    DistributorBrandingDTO:
      required:
        - distributorId
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        distributorId:
          type: string
          format: uuid
        logoUrl:
          maxLength: 255
          minLength: 0
          type: string
        faviconUrl:
          maxLength: 255
          minLength: 0
          type: string
        primaryColor:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        secondaryColor:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        backgroundColor:
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
        fontFamily:
          maxLength: 100
          minLength: 0
          type: string
        theme:
          type: string
          enum:
            - LIGHT
            - DARK
            - CUSTOM
        isDefault:
          type: boolean
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          format: uuid
    DistributorAuditLogDTO:
      required:
        - action
        - distributorId
        - entity
        - entityId
        - timestamp
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        distributorId:
          type: string
          format: uuid
        action:
          type: string
          enum:
            - CREATED
            - UPDATED
            - TERMINATED
        entity:
          maxLength: 50
          minLength: 0
          type: string
        entityId:
          maxLength: 50
          minLength: 0
          type: string
        metadata:
          $ref: '#/components/schemas/JsonNode'
        ipAddress:
          pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$
          type: string
        userId:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
    FilterOptions:
      type: object
      properties:
        caseInsensitiveStrings:
          type: boolean
        includeInheritedFields:
          type: boolean
      description: Filter options for customizing filter behavior
    FilterRequestTermsAndConditionsTemplateDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/TermsAndConditionsTemplateDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination
    PaginationRequest:
      type: object
      properties:
        pageNumber:
          type: integer
          description: The zero-based page number to retrieve.
          format: int32
          example: 0
          default: 0
        pageSize:
          type: integer
          description: The number of items per page.
          format: int32
          example: 10
          default: 10
        sortBy:
          type: string
          description: The field to sort the results by.
          example: name
        sortDirection:
          type: string
          description: The direction of sorting, either ASC or DESC.
          example: DESC
          default: DESC
      description: Represents a pagination request for retrieving paginated results, including page number, size, sort field, and direction.
    RangeFilter:
      type: object
      properties:
        ranges:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RangeObject'
          description: Map of field names to their range criteria
      description: Represents range filters for numeric fields
    RangeObject:
      type: object
      properties:
        from:
          type: object
          description: Start value of the range
        to:
          type: object
          description: End value of the range
      description: Represents a range with from and to values
    PaginationResponse:
      type: object
      properties:
        content:
          type: array
          description: The list of items for the current page.
          items:
            type: object
            description: The list of items for the current page.
        totalElements:
          type: integer
          description: The total number of elements across all pages.
          format: int64
        totalPages:
          type: integer
          description: The total number of pages based on the data size and page size.
          format: int32
        currentPage:
          type: integer
          description: The current page number, typically zero-based.
          format: int32
      description: Represents a paginated response containing a list of items and pagination metadata.
    FilterRequestShipmentDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/ShipmentDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination
    FilterRequestLeasingContractDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/LeasingContractDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination
    FilterRequestDistributorTermsAndConditionsDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/DistributorTermsAndConditionsDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination
    FilterRequestDistributorSimulationDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/DistributorSimulationDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination
    FilterRequestLendingConfigurationDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/LendingConfigurationDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination
    FilterRequestProductDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/ProductDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination
    FilterRequestDistributorOperationDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/DistributorOperationDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination
    FilterRequestDistributorBrandingDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/DistributorBrandingDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination
    FilterRequestDistributorAuditLogDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/DistributorAuditLogDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination
    FilterRequestDistributorDTO:
      required:
        - pagination
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/DistributorDTO'
        rangeFilters:
          $ref: '#/components/schemas/RangeFilter'
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
        options:
          $ref: '#/components/schemas/FilterOptions'
      description: Generic filter request that includes both filter criteria and pagination